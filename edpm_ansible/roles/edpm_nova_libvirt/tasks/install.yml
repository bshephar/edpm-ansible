---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Create libvirt persistent data directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    setype: "{{ item.setype | default(omit) }}"
    selevel: "{{ item.selevel | default(omit) }}"
    recurse: "{{ item.recurse | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items:
    - {'path': /etc/puppet, 'setype': container_file_t}
    - {'path': /etc/libvirt, 'setype': container_file_t}
    - {'path': /etc/libvirt/secrets, 'setype': container_file_t}
    - {'path': /etc/libvirt/qemu, 'setype': container_file_t}
    - {'path': /var/lib/libvirt, 'setype': container_file_t}
    - {'path': /var/cache/libvirt}
    - {'path': /var/lib/nova, 'setype': container_file_t}
    - {'path': /run/libvirt, 'setype': virt_var_run_t}
    # TODO(bogdando): use container_logwriter_t as of container-selinux v2.191.0
    - {'path': /var/log/containers/libvirt/swtpm, 'setype': container_file_t, 'mode': '0770'}
    - {'path': /var/log/containers/libvirt, 'setype': container_ro_file_t, 'selevel': s0, 'mode': '0750'}
    # NOTE(bogdando): this mostly replicates today t-h-t common/common-container-setup-tasks.yaml
    # we can tweak it further later, or move to some common tasks later
    - {'path': /var/lib/kolla/config_files, 'setype': container_file_t, 'selevel': s0, 'recurse': true}
    - {'path': /var/lib/edpm-config, 'setype': container_file_t, 'selevel': s0, 'mode': '0750'}
    - {'path': /var/lib/config-data, 'setype': container_file_t, 'selevel': s0, 'mode': '0755'}
    - {'path': /var/lib/config-data/ansible-generated/nova_libvirt, 'setype': container_file_t, 'mode': '0755'}
- name: Ensure /etc/ssh/ssh_known_hosts for libvirt containers bind-mounts
  ansible.builtin.copy:
    content: ""
    dest: /etc/ssh/ssh_known_hosts
    force: false
# qemu user on host will be cretaed by libvirt package install, ensure
# the qemu user created with same uid/gid as like libvirt package.
# These specific values are required since ovs is running on host.
# Once ovs with DPDK is containerized, we could modify this uid/gid
# to match with kolla config values.
- name: Ensure qemu group is present on the host
  ansible.builtin.group:
    name: qemu
    gid: 107
    state: present
- name: Ensure qemu user is present on the host
  ansible.builtin.user:
    name: qemu
    uid: 107
    group: qemu
    state: present
    shell: /sbin/nologin
    comment: qemu user
- name: Create directory for vhost-user sockets with qemu ownership
  ansible.builtin.file:
    path: /var/lib/vhost_sockets
    state: directory
    owner: qemu
    group: "{{ edpm_nova_libvirt_vhostuser_socket_group }}"
    setype: virt_cache_t
    seuser: system_u
- name: Ensure ceph configurations exist
  ansible.builtin.file:
    path: "{{ edpm_nova_libvirt_ceph_config_path }}"
    state: directory
- name: Check if libvirt is installed
  ansible.builtin.command: /usr/bin/rpm -q libvirt-daemon
  failed_when: false
  register: libvirt_installed
  changed_when: false
  check_mode: false
- name: Make sure libvirt services are disabled and masked
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
    masked: true
    daemon_reload: true
  with_items:
    - libvirtd.service
    - virtlogd.socket
  when: libvirt_installed.rc == 0
- name: Ensure /run/libvirt is present upon reboot
  ansible.builtin.copy:
    dest: /etc/tmpfiles.d/run-libvirt.conf
    content: |
      d /run/libvirt 0755 root root - -
- name: Enable os_enable_vtpm SELinux boolean for vTPM
  ansible.posix.seboolean:
    name: os_enable_vtpm
    persistent: true
    state: true
  when:
    - ansible_facts.selinux is defined
    - ansible_facts.selinux.status == "enabled"
    # (slagle) Disable setting this boolean due to
    # https://bugs.launchpad.net/edpm/+bug/1977873
    - ansible_facts['distribution_major_version'] is version('9', '<')
